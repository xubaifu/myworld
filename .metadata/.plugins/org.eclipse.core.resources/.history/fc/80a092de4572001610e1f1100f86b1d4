<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 加载jdbc资源文件 -->
	<util:properties id="jdbc" 
		location="classpath:config/jdbc.properties"/>
	
	<!-- 定义数据源 -->
	<bean id="ds" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="#{jdbc.url}"/>
		<property name="driverClassName" value="#{jdbc.driver}"/>
		<property name="username" value="#{jdbc.user}"/>
		<property name="password" value="#{jdbc.password}"/>
		<property name="maxIdleTime">8</property>  
	</bean>
	
	<!-- 定义sqlSessionFactory -->
	<bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
      <!-- 在此路径下扫描MyBatis映射文件  -->
      <property name="mapperLocations" 
      	value="classpath:com/baifu/dao/*.xml"/>
    </bean>
    
    <!-- 扫描DAO组件 -->
    <!-- 
    	MapperScannerConfigurer会扫描指定路径下，
    	带有指定注解的接口，然后自动实现该接口。
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!-- 扫描该路径下的接口 -->
       <property name="basePackage" 
       		value="com.baifu.dao" />
       	<!-- 只扫描带有该注解的接口 -->
       <property name="annotationClass" 
           value="com.baifu.dao.MyBatisRepository"/>
	</bean>

	<!-- 开启IOC注解扫描 -->
	<context:component-scan 
		base-package="com.baifu" />

	<!-- 开启MVC注解扫描 -->
	<mvc:annotation-driven />

	<!-- 处理请求转发 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 开启aop注解扫描 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 登录检查拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login/*"/>
			<mvc:exclude-mapping path="/findShareNote/*"/>
			<mvc:exclude-mapping path="/allArticleObj/*"/>
			<mvc:exclude-mapping path="/articleContent/selectContentsFun.do"/>
			<mvc:exclude-mapping path="/comment/getComment.do"/>
			<bean class="com.baifu.web.interceptor.CheckLoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- XML配置声明事务范围及类型 -->
	<!-- 声明式事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="load*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="select*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="get*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="within(com.baifu.service..*)" />
	</aop:config>
</beans>